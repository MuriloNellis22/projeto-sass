$cols: 12;
$gutter: 20px;
$l-device: 1200px;
$m-device: 760px;
$s-device: 480px;

* {
    margin: 0px;
    padding: 0px;
}

*, *::after, *::before {
    box-sizing: border-box;
}

@mixin d($size) {
    @if $size == l {
        @media screen and (min-width: #{$l-device}) {
            @content;
        }
    } @else if $size == m {
        @media screen and (min-width: #{$m-device}) and (max-width: #{$l-device - 1}){
            @content;
        }
    } @else if $size == s {
        @media screen and (max-width: #{$m-device - 1}) {
            @content;
        }
    }
}

@function grid($col, $offset: false) {
    $width: calc($col / $cols) * 100 + "%";
    $result: $width - $gutter;
    @if $offset == offset {
        $gutter: calc(#{$gutter} / 2);
        $result: $width + $gutter;
    }
    @return $result;
}

@for $i from 1 through $cols {
    .grid-#{$i} {
        width: grid($i);
    }
}

@mixin grid-structure {
    float: left;
    min-height: 1px;
    margin-left: calc(#{$gutter} / 2);
    margin-right: calc(#{$gutter} / 2);
    @include d(s) {
        width: 100%;
        float: none;
        margin-left: 0px;
        margin-right: 0px;
    }
}

[class^="grid-"] {
    @include grid-structure;
}

@for $i from 1 through $cols {
    .offset-#{$i} {
        margin-left: grid($i, offset);
        @extend %offset;
    }
}

@include d(s) {
    %offset  {
        margin-left: 0px;
    }
}

@mixin clearFix {
    &::after, &::before {
        content: '';
        display: table;
        clear: both;
    }
}

@mixin container {
    max-width: $l-device;
    margin: 0px auto;
    position: relative;
    @include d(m) {
        max-width: $s-device;
        margin-left: 10px;
        margin-right: 10px;
    }
    @include clearFix;
}

.container {
    @include container;
} 